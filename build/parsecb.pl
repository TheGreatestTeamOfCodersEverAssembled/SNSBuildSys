#!/usr/bin/env perl
#
# $Id$
#

#Todo: Would be nice to unify the COMMON block statement
#      to look like COMMON \name\ list-of-vars
#      which requires parsing of the common block statement

$infile = "@ARGV[0]";
$outfile = ">${infile}.mod";
$dirname = "$ENV{CMSROOT}/gen";
$timenow = localtime time;

#read file to parse
open infile or die "Can't open file $infile!\n";
@text = <infile>;
close infile;

#open file to write
open outfile or die ("Could not open output file $outfile!\n");
print outfile "****************************************\n";
print outfile "* Original file modified by parsecb.py\n";
print outfile "* at: $timenow\n";
print outfile "* \$", "Id: \$\n";
print outfile "****************************************\n";

$len = @text;
$ind = 0; #index in array
$rej = 0; #rejection id (will be increased)

while ($ind < $len) {
    $actline = @text[$ind];
    if ($actline =~ m/^      ( *)COMMON *\//i) {
        #get cb name, save statement and pathname
	$actline =~ tr/a-z/A-Z/;
	$actline =~ /\/(\S*)\//;
	$tmpname = $1;
	$tmpname =~ tr/A-Z/a-z/;
	$pathname = "$dirname/$tmpname.inc";
	$incname = "$tmpname.inc";
	$savestm = "      SAVE /$1/\n";
        #get complete cb
	@newblock = ("* -*- Mode: Fortran -*-\n* \$" . "Id: \$\n*\n\n"); 
	push @newblock, $actline;
	$ind++;
	while (	@text[$ind] =~ m/^     \S/) {
	    $nxtline = @text[$ind];
	    $nxtline =~ tr/a-z/A-Z/;
	    push @newblock, $nxtline; 
	    $ind++;
	} 
	push @newblock, $savestm;
	push @newblock, "\n* generated by parsecb.py";
	push @newblock, "\n*  - $infile\n";
	if (! -e $pathname) { #create new inc file for this cb
	    open pathname, ">$pathname" or die ("Could not open file $pathfile!\n");
	    print pathname @newblock;	    
	    close pathname;
	    print "* New common block created in $incname!\n";
	} else { #found existing inc file and check if definitions are different
	    $tmppathname = "/tmp/$tmpname.inc";	    
	    open tmppathname, ">$tmppathname" or die ("Could not open file $tmppathfile!\n");
	    print tmppathname @newblock;	    
	    close tmppathname;
            $cmd = "diff -qwu -I\"^*\" $pathname $tmppathname |";
	    open PIPE, $cmd or die ("Could not exec $cmd!\n");
	    while (<PIPE>) {;}
	    close PIPE;
	    if ($? == 0 ) { #defs are the same
		unlink $tmppathname;
		$cmd = "grep $infile $pathname |";
		open PIPE, $cmd or die ("Could not exec $cmd!\n");
		while (<PIPE>) {;}
		close PIPE;
		if ($? != 0 ) { #add file to end of def
		    open pathname, ">>$pathname" or die ("Could not open file $pathfile!\n");
		    print pathname "*  - $infile\n";
		    close pathname;
		    print "* Found existing common block $tmpname, added $infile as a reference!\n";
		}
	    } else { #defs differ, make a rejection file instead
		$rej++;
		$tmppathname2 = "${pathname}_rej$rej";
		$incname .= "_rej$rej";;
		$cmd = "mv -f $tmppathname $tmppathname2 |";
		open PIPE, $cmd or die ("Could not exec $cmd!\n");
		while (<PIPE>) {;}
		close PIPE;
		print "* Found differing common block, created $incname instead!\n";
	    }
	}
	print outfile "#include \"$incname\"\n";
	next;
    } elsif ($actline =~ m/^      ( *)SAVE *\//i) {
	#print "ign ", $actline;
	$ind++;
	while (	@text[$ind] =~ m/^     \S/) {
	    #print "ign ", @text[$ind];
	    $ind++;
	} 
	next;
    }

    print outfile $actline;
    $ind++;
}


close outfile;
